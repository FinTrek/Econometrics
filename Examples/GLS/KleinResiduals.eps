%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.26.5 (http://poppler.freedesktop.org)
%%Creator: gnuplot 4.2 patchlevel 4 
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 575 431
%%HiResBoundingBox: 0 0 575 431
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
/F8_0 /Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /quoteleft/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/exclamdown/cent/sterling/fraction/yen/florin/section
  /currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
  /.notdef/endash/dagger/daggerdbl/periodcentered/.notdef/paragraph/bullet
  /quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
  /.notdef/grave/acute/circumflex/tilde/macron/breve/dotaccent
  /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
  /emdash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/AE/.notdef/ordfeminine/.notdef/.notdef/.notdef/.notdef
  /Lslash/Oslash/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
  /.notdef/ae/.notdef/.notdef/.notdef/dotlessi/.notdef/.notdef
  /lslash/oslash/oe/germandbls/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 575 431 re
W
q
q
[0.1 0 0 0.1 0 0] cm
2.5 w
/DeviceRGB {} CS
[0 0 0] SC
737.5 464 m
781.5 464 l
5198.5 464 m
5154.5 464 l
S
/DeviceRGB {} cs
[0 0 0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 64.2164 44.4] Tm
0 0 Td
/F8_0 6 Tf
(-3)
[1.998
0
3.336
0] Tj
Q
737.5 1167.5 m
781.5 1167.5 l
5198.5 1167.5 m
5154.5 1167.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 64.2164 114.75] Tm
0 0 Td
/F8_0 6 Tf
(-2)
[1.998
0
3.336
0] Tj
Q
737.5 1871 m
781.5 1871 l
5198.5 1871 m
5154.5 1871 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 64.2164 185.1] Tm
0 0 Td
/F8_0 6 Tf
(-1)
[1.998
0
3.336
0] Tj
Q
737.5 2574.5 m
781.5 2574.5 l
5198.5 2574.5 m
5154.5 2574.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 66.2141 255.45] Tm
0 0 Td
/F8_0 6 Tf
(0)
[3.336
0] Tj
Q
737.5 3278 m
781.5 3278 l
5198.5 3278 m
5154.5 3278 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 66.2141 325.8] Tm
0 0 Td
/F8_0 6 Tf
(1)
[3.336
0] Tj
Q
737.5 3981.5 m
781.5 3981.5 l
5198.5 3981.5 m
5154.5 3981.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 66.2141 396.15] Tm
0 0 Td
/F8_0 6 Tf
(2)
[3.336
0] Tj
Q
737.5 464 m
737.5 508 l
737.5 3981.5 m
737.5 3937.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 72.082 37.4] Tm
0 0 Td
/F8_0 6 Tf
(0)
[3.336
0] Tj
Q
1629.5 464 m
1629.5 508 l
1629.5 3981.5 m
1629.5 3937.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 161.282 37.4] Tm
0 0 Td
/F8_0 6 Tf
(5)
[3.336
0] Tj
Q
2522 464 m
2522 508 l
2522 3981.5 m
2522 3937.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 248.864 37.4] Tm
0 0 Td
/F8_0 6 Tf
(10)
[3.336
0
3.336
0] Tj
Q
3414 464 m
3414 508 l
3414 3981.5 m
3414 3937.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 338.064 37.4] Tm
0 0 Td
/F8_0 6 Tf
(15)
[3.336
0
3.336
0] Tj
Q
4306.5 464 m
4306.5 508 l
4306.5 3981.5 m
4306.5 3937.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 427.314 37.4] Tm
0 0 Td
/F8_0 6 Tf
(20)
[3.336
0
3.336
0] Tj
Q
5198.5 464 m
5198.5 508 l
5198.5 3981.5 m
5198.5 3937.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 516.514 37.4] Tm
0 0 Td
/F8_0 6 Tf
(25)
[3.336
0
3.336
0] Tj
Q
737.5 464 4461 3517.5 re
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 456.571 389.165] Tm
0 0 Td
/F8_0 7 Tf
(Residuals)
[5.054
0
3.892
0
3.5
0
1.554
0
3.892
0
3.892
0
3.892
0
1.554
0
3.5
0] Tj
Q
1.25 w
/DeviceRGB {} CS
[1 0 0] SC
947.5 2346.5 m
947.5 2363.89 933.395 2378 916 2378 c
898.605 2378 884.5 2363.89 884.5 2346.5 c
884.5 2329.11 898.605 2315 916 2315 c
933.395 2315 947.5 2329.11 947.5 2346.5 c
S
1 J
916 2346.5 m
916 2346.5 l
S
0 J
1126 1695 m
1126 1712.39 1111.89 1726.5 1094.5 1726.5 c
1077.11 1726.5 1063 1712.39 1063 1695 c
1063 1677.61 1077.11 1663.5 1094.5 1663.5 c
1111.89 1663.5 1126 1677.61 1126 1695 c
S
1 J
1094.5 1695 m
1094.5 1695 l
S
0 J
1304.5 1473 m
1304.5 1490.39 1290.39 1504.5 1273 1504.5 c
1255.61 1504.5 1241.5 1490.39 1241.5 1473 c
1241.5 1455.61 1255.61 1441.5 1273 1441.5 c
1290.39 1441.5 1304.5 1455.61 1304.5 1473 c
S
1 J
1273 1473 m
1273 1473 l
S
0 J
1483 2227.5 m
1483 2244.89 1468.89 2259 1451.5 2259 c
1434.11 2259 1420 2244.89 1420 2227.5 c
1420 2210.11 1434.11 2196 1451.5 2196 c
1468.89 2196 1483 2210.11 1483 2227.5 c
S
1 J
1451.5 2227.5 m
1451.5 2227.5 l
S
0 J
1661 2580 m
1661 2597.39 1646.89 2611.5 1629.5 2611.5 c
1612.11 2611.5 1598 2597.39 1598 2580 c
1598 2562.61 1612.11 2548.5 1629.5 2548.5 c
1646.89 2548.5 1661 2562.61 1661 2580 c
S
1 J
1629.5 2580 m
1629.5 2580 l
S
0 J
1839.5 3186 m
1839.5 3203.39 1825.39 3217.5 1808 3217.5 c
1790.61 3217.5 1776.5 3203.39 1776.5 3186 c
1776.5 3168.61 1790.61 3154.5 1808 3154.5 c
1825.39 3154.5 1839.5 3168.61 1839.5 3186 c
S
1 J
1808 3186 m
1808 3186 l
S
0 J
2018 3516 m
2018 3533.39 2003.89 3547.5 1986.5 3547.5 c
1969.11 3547.5 1955 3533.39 1955 3516 c
1955 3498.61 1969.11 3484.5 1986.5 3484.5 c
2003.89 3484.5 2018 3498.61 2018 3516 c
S
1 J
1986.5 3516 m
1986.5 3516 l
S
0 J
2196.5 3316.5 m
2196.5 3333.89 2182.39 3348 2165 3348 c
2147.61 3348 2133.5 3333.89 2133.5 3316.5 c
2133.5 3299.11 2147.61 3285 2165 3285 c
2182.39 3285 2196.5 3299.11 2196.5 3316.5 c
S
1 J
2165 3316.5 m
2165 3316.5 l
S
0 J
2375 2160.5 m
2375 2177.89 2360.89 2192 2343.5 2192 c
2326.11 2192 2312 2177.89 2312 2160.5 c
2312 2143.11 2326.11 2129 2343.5 2129 c
2360.89 2129 2375 2143.11 2375 2160.5 c
S
1 J
2343.5 2160.5 m
2343.5 2160.5 l
S
0 J
2553.5 2773 m
2553.5 2790.39 2539.39 2804.5 2522 2804.5 c
2504.61 2804.5 2490.5 2790.39 2490.5 2773 c
2490.5 2755.61 2504.61 2741.5 2522 2741.5 c
2539.39 2741.5 2553.5 2755.61 2553.5 2773 c
S
1 J
2522 2773 m
2522 2773 l
S
0 J
2732 2413 m
2732 2430.39 2717.89 2444.5 2700.5 2444.5 c
2683.11 2444.5 2669 2430.39 2669 2413 c
2669 2395.61 2683.11 2381.5 2700.5 2381.5 c
2717.89 2381.5 2732 2395.61 2732 2413 c
S
1 J
2700.5 2413 m
2700.5 2413 l
S
0 J
2910.5 2348 m
2910.5 2365.39 2896.39 2379.5 2879 2379.5 c
2861.61 2379.5 2847.5 2365.39 2847.5 2348 c
2847.5 2330.61 2861.61 2316.5 2879 2316.5 c
2896.39 2316.5 2910.5 2330.61 2910.5 2348 c
S
1 J
2879 2348 m
2879 2348 l
S
0 J
3088.5 2801 m
3088.5 2818.39 3074.39 2832.5 3057 2832.5 c
3039.61 2832.5 3025.5 2818.39 3025.5 2801 c
3025.5 2783.61 3039.61 2769.5 3057 2769.5 c
3074.39 2769.5 3088.5 2783.61 3088.5 2801 c
S
1 J
3057 2801 m
3057 2801 l
S
0 J
3267 2533.5 m
3267 2550.89 3252.89 2565 3235.5 2565 c
3218.11 2565 3204 2550.89 3204 2533.5 c
3204 2516.11 3218.11 2502 3235.5 2502 c
3252.89 2502 3267 2516.11 3267 2533.5 c
S
1 J
3235.5 2533.5 m
3235.5 2533.5 l
S
0 J
3445.5 2550 m
3445.5 2567.39 3431.39 2581.5 3414 2581.5 c
3396.61 2581.5 3382.5 2567.39 3382.5 2550 c
3382.5 2532.61 3396.61 2518.5 3414 2518.5 c
3431.39 2518.5 3445.5 2532.61 3445.5 2550 c
S
1 J
3414 2550 m
3414 2550 l
S
0 J
3624 3711.5 m
3624 3728.89 3609.89 3743 3592.5 3743 c
3575.11 3743 3561 3728.89 3561 3711.5 c
3561 3694.11 3575.11 3680 3592.5 3680 c
3609.89 3680 3624 3694.11 3624 3711.5 c
S
1 J
3592.5 3711.5 m
3592.5 3711.5 l
S
0 J
3802.5 2268 m
3802.5 2285.39 3788.39 2299.5 3771 2299.5 c
3753.61 2299.5 3739.5 2285.39 3739.5 2268 c
3739.5 2250.61 3753.61 2236.5 3771 2236.5 c
3788.39 2236.5 3802.5 2250.61 3802.5 2268 c
S
1 J
3771 2268 m
3771 2268 l
S
0 J
3981 2722.5 m
3981 2739.89 3966.89 2754 3949.5 2754 c
3932.11 2754 3918 2739.89 3918 2722.5 c
3918 2705.11 3932.11 2691 3949.5 2691 c
3966.89 2691 3981 2705.11 3981 2722.5 c
S
1 J
3949.5 2722.5 m
3949.5 2722.5 l
S
0 J
4159.5 3270.5 m
4159.5 3287.89 4145.39 3302 4128 3302 c
4110.61 3302 4096.5 3287.89 4096.5 3270.5 c
4096.5 3253.11 4110.61 3239 4128 3239 c
4145.39 3239 4159.5 3253.11 4159.5 3270.5 c
S
1 J
4128 3270.5 m
4128 3270.5 l
S
0 J
4338 3127 m
4338 3144.39 4323.89 3158.5 4306.5 3158.5 c
4289.11 3158.5 4275 3144.39 4275 3127 c
4275 3109.61 4289.11 3095.5 4306.5 3095.5 c
4323.89 3095.5 4338 3109.61 4338 3127 c
S
1 J
4306.5 3127 m
4306.5 3127 l
S
0 J
4516 1045.5 m
4516 1062.89 4501.89 1077 4484.5 1077 c
4467.11 1077 4453 1062.89 4453 1045.5 c
4453 1028.11 4467.11 1014 4484.5 1014 c
4501.89 1014 4516 1028.11 4516 1045.5 c
S
1 J
4484.5 1045.5 m
4484.5 1045.5 l
S
0 J
5046 3915 m
5046 3932.39 5031.89 3946.5 5014.5 3946.5 c
4997.11 3946.5 4983 3932.39 4983 3915 c
4983 3897.61 4997.11 3883.5 5014.5 3883.5 c
5031.89 3883.5 5046 3897.61 5046 3915 c
S
1 J
5014.5 3915 m
5014.5 3915 l
S
2.5 w
0 J
/DeviceRGB {} CS
[0 0 0] SC
737.5 464 4461 3517.5 re
S
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
