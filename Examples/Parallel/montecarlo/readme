The version of montecarlo.m in this directory does load
balancing and is fault tolerant, in that it will finish
even if slave nodes fail (the master must not crash). The
subdirectory "simple" contains a simple version that doesn't
do either of these. Comparing the two versions may be useful.

The common_random_draws subdir contains a version that passes
all of the random draws from the master node to the slaves. This
ensures obtaining the same results exactly, regardless of how
many slaves are used. Given the periodicity of the Mersenne
Twister, and the fact that each node starts at a different point
in the sequence of pseudo-random numbers, the likelihood of
overlapping subsequences on different nodes is small enough to make
this unnecessary, IMHO.

mc_example1.m is a simple example
mc_example2.m is a more time-consuming example
mc_example3.m is an even more time consuming example. This example
generated the results reported in Creel (2007) Journal of Applied Econometrics


