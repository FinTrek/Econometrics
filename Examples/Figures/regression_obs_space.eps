%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.26.5 (http://poppler.freedesktop.org)
%%Creator: fig2dev Version 3.2 Patchlevel 3c
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 665 422
%%HiResBoundingBox: 0 0 665 422
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font EVWGXH+Times-Roman
%!FontType1-1.0: EVWGXH+Times-Roman
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright \(URW\)++,Copyright 1999 by \(URW\)++ Design & Develo\
pment; Cyrillic glyphs added by Valek Filippov \(C\) 2001-2005) readonly def
/FullName (Nimbus Roman No9 L Regular) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /EVWGXH+Times-Roman def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 863 683] readonly def
/StrokeWidth 0 def
/UniqueID 5020931 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 49 /one put
dup 50 /two put
dup 61 /equal put
dup 77 /M put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 89 /Y put
dup 95 /underscore put
dup 97 /a put
dup 98 /b put
dup 101 /e put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 118 /v put
dup 120 /x put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
F88E0E90C57EC003CFF45554C63978A4457910ACCCBDB199AE01D3A5CC868F4B
822F86C8BEBF268A62A74B74B7BB3BB731E3098EBB936E540471387BC93EBC24
731A8FD551B73BB61F5470D5B804CCE0D897C3F8651422B30EBF8D82BF962DDA
BF33C897A6ACD27770FAA07EB13C67191297413C15F11F22612AB3189B5B29B6
53FA4E9AFF4C3856B090173C8EE058CDF15D54B7C654C55DC955C27BFCC5E85B
8B4EC52DF29D8211C41DC195D0C50AF2C975FF81CB6FF174C0A139B6FC254C1D
701E42DCE9431FCEDB970B8B83E39A2B4AF6A11ED23AF834F223E9451917C9FB
9D9E1BF95FC6201589755A46660201DDB0E348BD16CC36743FCDF4330A021D43
3F2AA952F37676509DB827EDA7932D8F7570DB2D7426C121F4D2E0DBACF2185E
89D9ADA65D6495E52FC94F18C4517C5654B7B8F1159734B4115DD4B52A339981
6587D06C30B64978785FC81E22B6FD242D20D5D04A07AF84F0DFA42294B597DB
6DF855BC195D1151776858476BF76101D14EBAA2F34A6B9DC326925DCC3BEAFC
86C933DA5BAAC2567AEECEF0B7303E8FF20F3A9496E2830A14D0ACAC93050AFF
6EF7760853118A9B74079E36D63806D4C11281615AAE7A22F1263B5DC9F54B02
DFF65CA1D6F76FD5CA968D329E8986BB8201440B9A7FF6AAB94E8D8811302E2F
FC0F0A550FEF836B8949C27F6703C90C78980D4CF850D3C665BCC45823589C7C
1E7E183277E40AF1B235AD0402447280F827CCD532CEAF51B6609CD31EF3FE5C
B4911E270C716907591DE2FB4B5860943E01C0E31089EB8087B05DC4DFF5F660
E82665C3D1277C4269328F73165866DD45D121282F05B766ED27C4DAE86C064A
C8458AAFC856443B11EA191F7A51E3B62FC485D3777BE67224B7A232DDD5CAAA
084AFC0D6AA2AA95C776F3979A4D5B8727CA0B2B2D7B5C3F2B3336F03D704339
5A592D15B00D58CDFF93CD03816AC8EFEDDB68094B8A5F90D56A5B645F8F72CD
9ED9BB5079F2547C0E98A8BA3967191E388BCD6DDA2F7B3D2E47F9021E51BFED
0542A867BA9769FCDB1CA12FA55422021ABE2AAED98917553F1E60AC5129C64C
C81BDF571EB2038A4B3B92442548C72B84908206598D5C42F9B7E2833CD774DC
76FEC831434AF35950E767407125B90BE29B46AFFDF52A7A68EED460130482B6
8988E57CE39E75E4F7E1B95B0548559BB6BA66A7DA8F1E3A6A55D8E81822F8B0
C1996EE8B3436DB4889643A15F617C86A44570D06B86B787B9C5545F5CAF7ABA
B86661A6BFE5087497C40BDC820B7810E75857C4C551134D32FEF41B508EF2FC
95666DF84D1FD9EB5C728DE28B236825E35F6D387F52C5C8ADB5E73ECAF271FF
86143748945ACDCC8DEE54F74A4287EA32840B87ABFD7CC6D9534EBF69E96C53
A78E1FCD6FDF7D31AB38FFBB9E77A1FD795F92CE443875B53698E97D908575C5
9B4A2F54BF28D593B5672835EC06DB4CD6FE385AC469FABADEB3EE6921BB6867
7C908A9BCDED59A91E36C4FF3B8F79E13ED09DD2BB78BAEFF680FAE9F6A0B631
FE623CA5DFEB17F3ED85AD61E1149E8A46C9B76F8BF9CB24DF5F91FFE82F6438
3D4D5A2F43A34EB244736FB37FC7DED0CB5352634589250D4AE4E7FF999EA788
83F454E30B716563BCEAA900377C8B51C386EFF4EDA7E8BD48CC40CCC1A74FCA
E26E374584FC7ADC75EBC09DCDF3820C2C14E71F9065B4B90175FB4A7CAFDE2B
E9873887EE4312CE246813ACA0467347CE68BBB8BF37FEFCCC5B3414F747E5B0
C07627BB16871CA50A66DA4D87D9ABB3FD1156B43E04EF5900457C3BD303C0FE
A80E11AFCEEE92AEBA3E942F922138764C1A89748880D3EE86C1F8A5BE16D866
62CBEC00B8C06738254FF147184D081A63BA28B2F98673C70878CED20B9659C5
B273E93B3E24438010A83042A5AF11B54788435E2CCC21D2AEE81215B432E5F5
5F77689405D67353C3E2E78EEA6902694173FD43994672204C2F0C3F93210733
60F2481DEFDE80B70CF6CCEAFD5E37C7E33A00E14110F008C3FC6504BF7220C8
EF13F215CF630E1DE254CF682BA9C3F268CA497105A7164F99335622FB58B9F4
45D246250414E6A576BC4F0ED29A4B4F0FC5735060420A9F6582958FEE2D4EC9
12898A9B329AC8D8BDB618C1445E369A9199FCB63AF837A5BDE631033B35D23D
C63DCD1408900DC51D99FBF276E3B4EAA778B31719341ABFE320DAA971BFFB3B
AE508BBFF9786366824468A53AE15D474748A454560AFE036B1DB7DB7685006B
8E0E24D3BE98CA8FD154A10620482C09A77E4D7DE7A0F79D0AAEB8C0ED9CFC8F
4CC560E9322B2D7762603AABB0449736DB9BE4DC1EF2C2E2753CF590E5119FD3
56EA31183CED929E3746D6D6CAD0687D58B38784536AC77C70BC45FFB07A9584
2026CF70547C72B29FBD923DEA05C4FC745A1A9DA10F3D84AB1A1683A77DAEC7
693712E2C869FB1C8AF1FD13F6E9D042F286EE9D7835C49EE60209D852CB8F6F
5153089486FC1179BCCAD4B69E5BC8305832682B9115F64549D4DFF13AB1F615
2794F1514EBD4AC748EF0EC1BCEAB0A44811E6AD183F4FCDF8EFB7DE4B4B76F7
8BD86047BC17A2151EF72C00B3799E00EC6962BD8394329D74F3BE61A273098F
B3C910342E9F4219200E1D823E5B9C6F1CC4DB51E383703F6DF16B4717DE7D98
16C298334F668FB26374767270256E7FBEBA689DBA31DD7DFE0F6DBEFEB7AE6F
5E8747818C62FE61EC0F0138F4A124E09639233E15BE28C8075A7F336F17FFAB
5DF28F85FF23538FE5B8CE8E1FF345E5FB03B249F8A430A0DEEF1525EBF88287
066AC50F1ADEC9369DAD20AC3882B47644AE4B624689BD1D1F39A0FA429194B7
A752BB479CB4AAAB1D1A7B519C3A4DC73C0135D1544054EFD060216286F4536B
FC63D32E721A7D542C9BCA1A914ECE567915FB2C85F1C25FA8AF738D0DC3859C
610558012E5CF70ADE05151515485251F13582F3054C527E28A7243473BBCBE2
C5FDAB5AD12A91B534E98F88C130AC3B60EDFF58CB3263D30A40BA44D6278462
21270766FFDA4EFB519E801D789D4585F235F75DA634025F0B3C588FC2D4B499
0F75298A6F6E8479BD5671B837926660C1A38B078F7332BFAE2E42A40A94C8F5
E1F89D77E242C303D4603D2712F5544C23D040AB2900D8EE85FF56AA2DE46D89
47C01BCF327751821EE0ED662D7A166107265F84206A22A9D4ECEFEB29F04078
267DCF82C831E22D48D1359AE45AF0D591049B582F759CD8ED40634308A37C98
3656461535E91E223B38CA7AAA38552652421355E29D5B8FA39895DBCF0BE238
688B8E4D304E05C94C90FDF9EB12F568F0542F645E957D733C8BC225492290FB
A423144EA1E92356B82EFD6A6E7DBE42D4F861919D275892A328D21ED72085C5
FC4C68C447187FAB8E58F1B335BA19D41F293EBC900CA8B4E7153E0F571ECE94
577F56318A2829EB44432A15AE8FE611D3902F13EC58D4F7137FBE990399949E
03C0316959ED1BAC7F771D6F59A9EB3B234A682313FF2839F92119141688EC98
E29B3CFDBE7FA35BDC27EBA3FE57F1FA32B5B1006B5C84F3D3C81A0EB69CC02F
A054F6A4562A16D9C4260177C78D2A64987DCCBD6AF1E98165CED31ADA0EB148
0646BE44F9C701EA9E09ED7FDF9BBB2BDC10677F70CBB9519E2C351F95C5AC07
2F8672513C67CA76BB11EB65BFB05F69689A6EAAA9938CD66723DA44D61F264E
384A84EE5241F9DFE533222B8370F2C25A7D93E6ECAA29F00D59B306371830BA
2AF0C7437B51206D695002D420C37F369EB18DF7C51916E7B01C9751E8C23263
27ABAFA1215BD3CB9DB0015419C198A956AF77985720F7325E0780EF132188D1
90AF1A61EE3EE534461DE249705BE4823F3F6A4B16A823F78F4C277141D4C669
7040CD5479E38318BC48C76E42EE02F2DF74C70BEDF0E2808D43513876EAAD34
9C92CDA548B377DC449FE651C09C2E986B15ED5983485EE12E21CC565D8881A3
401435A1E12C07782AE81C1B715A36F8FF820004DBBAA9CC46EB10EF01362119
D199C28923FECFA9C3591818A93F928C26009758BB894165082C57D16E764208
998947CC7CD6BC7736EB4B81A4E465C8D5688F63AEFC946B8EEC4C47D91F4C84
2FD03431F52479F3B60B15F172D6995B0C1C36CA5A0AB779CCB61043F71FA854
2E0CF64923C36791BB77AFA7A9530E28E77CA3A0B5660EC1B44D71FFC4DE74B3
27EA69DB457E25FA256EEB4F3B8E918D268CA0BC152347332C332F2DB23C436B
11B7CE69A76B1F418E34DB2410BE1C97036AFCF22F3752BAA83E9A66759B1F7B
CB4F50AEDC27081F4376618DDAF463FE021354808A0B3C386DEE122D0403B1E5
B15AF895DAFD4E6BA5155011A6D923C43272CEFE39CC1F2F7CD6401194166707
C0B5F65D0C35C6049E33B843AF1C30E9A8A7D911F8B2E66700D0E222DFE0500F
A22E95A741D9ADFFBA074129053445F184598F91283D2AF80423B01AB333FA24
4B6B7638BBA17500E8F72E4E401015D0D50E1D2BEFAE524B8D7157B3C6A07BD5
0EDA142640624384FDAD7B31D07A246B60FA399BDF4B74C3579290349EC54571
7A238148DB91FD603CC62BD96D5E2D268DC1185C6C387595E44DEE66257B00D0
419074697EB452A95A2AF5865DED6CFC669B309E5EAE1F289463869165199574
55FC8E2B5A0AD7C5E210420071A1B63A6A15056F6E38E2A6A97DA1C04B32CBA2
CB94438DC2BE6AE9017462D07F874A35FB445E53028BD3A3537C0EBEB8918C06
AAD2B246EAFB457A91F11544EBC569558F3C686DDBC31B743B131652815EA3AC
FFBC94AE520FEF4F75691FF0173A2882C5722DD477204F4CF14BDFF7095AEA9D
6CF507800AEEAD874A94E6F6657467528D329B8BC31C8292CD8FC330ABABD757
ACF62F41FCEBA4DBD9ABD658C1C34CBADF8D83A9622939CD55B5F29AC31A4FE1
1CC9E3F921783395AD14A93BCC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /EVWGXH+Times-Roman 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 665 422 re
W
q
q
[0.1 0 0 0.1 0 0] cm
q
0 4220 m
0 0 l
6650 0 l
6650 4220 l
0 4220 l
h
729.48 4217.57 m
691.688 4217.57 l
691.688 4121.83 l
710.586 4197.42 l
729.48 4121.83 l
729.48 4217.57 l
h
W*
4.72425 w
/DeviceRGB {} CS
[0 0 0] SC
710.586 12.9922 m
710.586 4208.12 l
S
Q
4.72425 w
/DeviceRGB {} CS
[0 0 0] SC
729.48 4121.83 m
710.586 4197.42 l
691.688 4121.83 l
S
q
0 4220 m
0 0 l
6650 0 l
6650 4220 l
0 4220 l
h
6020.64 447.625 m
6020.64 485.418 l
5924.9 485.418 l
6000.48 466.52 l
5924.9 447.625 l
6020.64 447.625 l
h
W*
30.293 466.52 m
6011.19 466.52 l
S
Q
5924.9 447.625 m
6000.48 466.52 l
5924.9 485.418 l
S
q
0 4220 m
0 0 l
6650 0 l
6650 4220 l
0 4220 l
h
4694.07 1954.97 m
4680.84 1990.25 l
4592.03 1956.23 l
4669.51 1965.05 l
4605.26 1920.96 l
4694.07 1954.97 l
h
W*
710.586 466.52 m
4678.95 1968.83 l
S
Q
4605.26 1920.96 m
4669.51 1965.05 l
4592.03 1956.23 l
S
q
0 4220 m
0 0 l
6650 0 l
6650 4220 l
0 4220 l
h
3026.73 3239.97 m
2997.75 3263.91 l
2936.65 3190.21 l
2999.64 3236.19 l
2965.62 3166.27 l
3026.73 3239.97 l
h
W*
710.586 466.52 m
3006.57 3244.38 l
S
Q
2965.62 3166.27 m
2999.64 3236.19 l
2936.65 3190.21 l
S
[37.794] 0 d
4678.95 1968.83 m
6634.79 2734.16 l
S
[] 0 d
2978.22 3187.69 m
3545.13 1543.65 l
S
3460.1 1685.38 m
3290.02 1628.69 l
S
3290.02 1600.34 m
3346.71 1430.27 l
S
/DeviceRGB {} cs
[0 0 0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 0.194531 369.791] Tm
0 0 Td
/F8_0 11.3382 Tf
(Observation 2)
[8.18618
0
5.6691
0
4.41056
0
5.034161
0
3.775621
0
5.6691
0
5.034161
0
3.15202
0
3.15202
0
5.6691
0
5.6691
0
2.83455
0
5.6691
0] Tj
473.37 -357.153 Td
(Observation 1)
[8.18618
0
5.6691
0
4.41056
0
5.034161
0
3.775621
0
5.6691
0
5.034161
0
3.15202
0
3.15202
0
5.6691
0
5.6691
0
2.83455
0
5.6691
0] Tj
445.0247 -201.253 Td
(x)
[5.6691
0] Tj
255.1097 -68.029 Td
(y)
[5.6691
0] Tj
549.9027 -116.2165 Td
(S\(x\))
[6.304039
0
3.775621
0
5.6691
0
3.775621
0] Tj
351.4847 -235.2675 Td
(x*beta=P_xY)
[5.6691
0
5.6691
0
5.6691
0
5.034161
0
3.15202
0
5.034161
0
6.394745
0
6.304039
0
5.6691
0
5.6691
0
8.18618
0] Tj
328.8081 -113.3815 Td
(e = M_xY)
[5.034161
0
2.83455
0
6.394745
0
2.83455
0
10.07966
0
5.6691
0
5.6691
0
8.18618
0] Tj
Q
/DeviceGray {} cs
[0] sc
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font EVWGXH+Times-Roman
%%EOF
